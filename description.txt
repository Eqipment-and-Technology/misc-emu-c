Программный эмулятор процессора (оригинальной) архитектуры MISC для персональных компьютеров. MISC - Minimal Instruction set computer (ЭВМ с минимальным набором инструкций, ЭВМ МНИ).

Программный эмулятор используется при разработке новой вычислительной системы (микро-ЭВМ) на основе архитектуры MISC. Эмулятор позволяет определить и проверить возможности и исправить возможные недостатки архитектуры до её аппаратной реализации.

Задачи (?) эмулятора:
1. эмуляция ЦП,
2. эмуляция функций запоминающих устройств,
3. эмуляции функций устройств ввода-вывода,
4. базовые средства отладки.

Т.к. основная задача данного эмулятора -- проверка работоспособности машинного языка процессора и, затем, программирование и отладка встроенного системного ПО (firmware), то эмулируется минимальная (пригодная для использования) конфигурация (комплектация) микро-ЭВМ: центральный процессор, ПЗУ, ОЗУ и последовательный порт ввода-вывода.

ПЗУ представлено файлом и хранит в себе бинарные инструкции отлаживаемого программного кода.
Ячейки ОЗУ выделяются из ОЗУ хост-компьютера (компьютера, на котором запущен эмулятор) и может быть быть сохранена в выходной файл.
Функции отладчика включается флагом -D и вызывается после выполнения инструкции. Возможные команды:
Breakpoint (B)
	Цель: установить точку останова (breakoint) по адресу.
	Синтаксис: B адрес
	Комментарий: После выполнения инструкции расположенной по этому адресу вызовается меню отладчика.
Continue (C)
	Цель: продолжить выполнение кода без захода в отладчик.
	Синтаксис: C.
	Комментарий: Если после ввода этой команды встретится точка останова, то отладчик вызовется снова.
Dump (D)
	Цель: вывод содержимого области памяти.
	Синтаксис: D адрес1, адрес2
	Комментарий: Содержимое выводится в формате «смещение младший:старший».
Next (N)
	Цель: выполнить следующую инструкцию.
	Синтаксис: N
Quit (Q)
	Цель: завершить эмуляцию.
	Синтаксис: Q
Store (S)
	Цель: поместить по указанному адресу указанное значение.
	Синтаксис: S адрес значение

---
Процессорная архитектура MISC состоит из следующих, идентифицирующих её элементов:
1. регистров,
2. режимов адресации,
3. набора инструкций,
4. методов работы с периферийными устройствами: прерываний и прямого доступа к памяти.
